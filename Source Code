```package main
import (
	"fmt"
	"os"
)

const MAX_SAMPAH = 100
const MAX_JENIS = 20
const MAX_DAUR = 100

type Jenis struct {
	Nama string
}

type DataTerkumpul struct {
	Jenis  Jenis
	Jumlah float64
	Waktu  string
}

type DataDaurUlang struct {
	Jenis  Jenis
	Jumlah float64
	Metode string
	Waktu  string
}

var dataSampahTerkumpul [MAX_SAMPAH]DataTerkumpul
var daftarJenisSampah [MAX_JENIS]Jenis
var dataDaurUlang [MAX_DAUR]DataDaurUlang
var nSampah, nJenis, nDaur int

func initDummyData() {
	daftarJenisSampah[0] = Jenis{Nama: "Plastik"}
	daftarJenisSampah[1] = Jenis{Nama: "Kertas"}
	daftarJenisSampah[2] = Jenis{Nama: "Kaca"}
	daftarJenisSampah[3] = Jenis{Nama: "Logam"}
	nJenis = 4

	dataSampahTerkumpul[0] = DataTerkumpul{Jenis: daftarJenisSampah[0], Jumlah: 50.5, Waktu: "2025-05-20"}
	dataSampahTerkumpul[1] = DataTerkumpul{Jenis: daftarJenisSampah[1], Jumlah: 30.0, Waktu: "2025-05-21"}
	dataSampahTerkumpul[2] = DataTerkumpul{Jenis: daftarJenisSampah[2], Jumlah: 20.75, Waktu: "2025-05-22"}
	nSampah = 3

	dataDaurUlang[0] = DataDaurUlang{Jenis: daftarJenisSampah[0], Jumlah: 40.0, Metode: "Pencacahan", Waktu: "2025-05-20"}
	dataDaurUlang[1] = DataDaurUlang{Jenis: daftarJenisSampah[1], Jumlah: 25.0, Metode: "Pemadatan", Waktu: "2025-05-21"}
	nDaur = 2
}

func tungguEnter(prompt string) {
	fmt.Print(prompt)
	var dummyInput string
	fmt.Scanln(&dummyInput)
}

func MenuUtama() {
	fmt.Println("╔═════════════════════════════════════════════════╗")
	fmt.Println("║           APLIKASI PENGELOLAAN SAMPAH           ║")
	fmt.Println("╠═════════════════════════════════════════════════╣")
	fmt.Println("║ Pilih menu dengan memasukkan nomor yang sesuai: ║")
	fmt.Println("╠═════════════════════════════════════════════════╣")
	fmt.Println("║ 1. Data Sampah Yang Sudah Terkumpul             ║")
	fmt.Println("║ 2. Data Jenis Sampah                            ║")
	fmt.Println("║ 3. Data Daur Ulang                              ║")
	fmt.Println("║ 4. Cari Data Sampah                             ║")
	fmt.Println("║ 5. Urutkan Data Sampah                          ║")
	fmt.Println("║ 6. Tampilkan Statistik                          ║")
	fmt.Println("║ 7. Keluar Aplikasi                              ║")
	fmt.Println("╚═════════════════════════════════════════════════╝")
	fmt.Print(" PILIH OPSI > ")
}

func MenuPerubahanData() {
	fmt.Println("╔═════════════════════════════════════════════════╗")
	fmt.Println("║               LIST PERUBAHAN DATA               ║")
	fmt.Println("╠═════════════════════════════════════════════════╣")
	fmt.Println("║ Silakan untuk memilih :                         ║")
	fmt.Println("║                                                 ║")
	fmt.Println("║ 1. Tampilan Data                                ║")
	fmt.Println("║ 2. Tambahkan Data                               ║")
	fmt.Println("║ 3. Hapus Data                                   ║")
	fmt.Println("║ 4. Ubah Data                                    ║")
	fmt.Println("║ 0. Kembali                                      ║")
	fmt.Println("╚═════════════════════════════════════════════════╣")
	fmt.Print(" PILIH OPSI > ")
}

func MenuTampilanDataSampahYangTerkumpul() {
	fmt.Println("╔═════════════════════════════════════════════════╗")
	fmt.Println("║      LIST DATA SAMPAH YANG SUDAH TERKUMPUL      ║")
	fmt.Println("╠═════════════════════════════════════════════════╣")
	fmt.Println("║ Berikut adalah tabel data sampah yang sudah     ║")
	fmt.Println("║ terkumpul.                                      ║")
	fmt.Println("╠════╦══════════════╦═════════════╦══════════════╣")
	fmt.Println("║ No │ Jenis        │ Jumlah (kg) │ Waktu        ║")
	fmt.Println("╚════╩══════════════╩═════════════╩══════════════╝")
}

func MenuTampilanDataJenisSampah() {
	fmt.Println("╔═════════════════════════════════════════════════╗")
	fmt.Println("║             LIST DATA JENIS SAMPAH              ║")
	fmt.Println("╠═════════════════════════════════════════════════╣")
	fmt.Println("║ Berikut adalah tabel data jenis sampah yang     ║")
	fmt.Println("║ tersedia.                                       ║")
	fmt.Println("╠════╦══════════════════════════════════════════╣")
	fmt.Println("║ No │ Jenis Sampah                             ║")
	fmt.Println("╚════╩══════════════════════════════════════════╝")
}

func MenuTampilanDataDaurUlang() {
	fmt.Println("╔═════════════════════════════════════════════════╗")
	fmt.Println("║              LIST DATA DAUR ULANG               ║")
	fmt.Println("╠═════════════════════════════════════════════════╣")
	fmt.Println("║ Berikut adalah tabel data sampah yang di daur   ║")
	fmt.Println("║ ulang.                                          ║")
	fmt.Println("╠════╦══════════╦═════════════╦══════════╦═══════╣")
	fmt.Println("║ No │ Jenis    │ Jumlah (kg) │ Metode   │ Waktu ║")
	fmt.Println("╚════╩══════════╩═════════════╩══════════╩═══════╝")
}

func MenuTambahDataSampahYangTerkumpul() {
	fmt.Println("╔═════════════════════════════════════════════════╗")
	fmt.Println("║      TAMBAH DATA SAMPAH YANG SUDAH TERKUMPUL    ║")
	fmt.Println("╠═════════════════════════════════════════════════╣")
	fmt.Println("║ Silakan untuk menambah data sampah untuk        ║")
	fmt.Println("║ memasukkannya ke data yang sudah terkumpul.     ║")
	fmt.Println("╚═════════════════════════════════════════════════╝")
}

func MenuTambahDataJenisSampah() {
	fmt.Println("╔═════════════════════════════════════════════════╗")
	fmt.Println("║            TAMBAH DATA JENIS SAMPAH             ║")
	fmt.Println("╠═════════════════════════════════════════════════╣")
	fmt.Println("║ Silakan untuk menambahkan jenis sampah yang     ║")
	fmt.Println("║ baru.                                           ║")
	fmt.Println("╚═════════════════════════════════════════════════╝")
}

func MenuTambahDataDaurUlang() {
	fmt.Println("╔═════════════════════════════════════════════════╗")
	fmt.Println("║             TAMBAH DATA DAUR ULANG              ║")
	fmt.Println("╠═════════════════════════════════════════════════╣")
	fmt.Println("║ Silakan untuk menambahkan data sampah yang akan ║")
	fmt.Println("║ di daur ulang.                                  ║")
	fmt.Println("╚═════════════════════════════════════════════════╝")
}

func MenuHapusDataSampahYangTerkumpul() {
	fmt.Println("╔═════════════════════════════════════════════════╗")
	fmt.Println("║      HAPUS DATA SAMPAH YANG SUDAH TERKUMPUL     ║")
	fmt.Println("╠═════════════════════════════════════════════════╣")
	fmt.Println("║ Silakan untuk menghapus data sampah dari tabel  ║")
	fmt.Println("║ yang sudah tersedia.                            ║")
	fmt.Println("╚═════════════════════════════════════════════════╝")
}

func MenuHapusDataJenisSampah() {
	fmt.Println("╔═════════════════════════════════════════════════╗")
	fmt.Println("║             HAPUS DATA JENIS SAMPAH             ║")
	fmt.Println("╠═════════════════════════════════════════════════╣")
	fmt.Println("║ Silakan untuk menghapus jenis sampah yang       ║")
	fmt.Println("║ tersedia.                                       ║")
	fmt.Println("╚═════════════════════════════════════════════════╝")
}

func MenuHapusDataDaurUlang() {
	fmt.Println("╔═════════════════════════════════════════════════╗")
	fmt.Println("║              HAPUS DATA DAUR ULANG              ║")
	fmt.Println("╠═════════════════════════════════════════════════╣")
	fmt.Println("║ Silakan untuk menghapus data sampah yang di     ║")
	fmt.Println("║ daur ulang.                                     ║")
	fmt.Println("╚═════════════════════════════════════════════════╝")
}

func MenuUbahDataSampahYangTerkumpul() {
	fmt.Println("╔═════════════════════════════════════════════════╗")
	fmt.Println("║       UBAH DATA SAMPAH YANG SUDAH TERKUMPUL     ║")
	fmt.Println("╠═════════════════════════════════════════════════╣")
	fmt.Println("║ Silakan untuk mengubah data sampah dari tabel   ║")
	fmt.Println("║ yang sudah tersedia.                            ║")
	fmt.Println("╚═════════════════════════════════════════════════╝")
}

func MenuUbahDataJenisSampah() {
	fmt.Println("╔═════════════════════════════════════════════════╗")
	fmt.Println("║              UBAH DATA JENIS SAMPAH             ║")
	fmt.Println("╠═════════════════════════════════════════════════╣")
	fmt.Println("║ Silakan untuk mengubah data jenis sampah.       ║")
	fmt.Println("╚═════════════════════════════════════════════════╝")
}

func MenuUbahDataDaurUlang() {
	fmt.Println("╔═════════════════════════════════════════════════╗")
	fmt.Println("║               UBAH DATA DAUR ULANG              ║")
	fmt.Println("╠═════════════════════════════════════════════════╣")
	fmt.Println("║ Silakan untuk mengubah data sampah daur ulang.  ║")
	fmt.Println("╚═════════════════════════════════════════════════╝")
}

func MenuCariDataSampah() {
	fmt.Println("╔═════════════════════════════════════════════════╗")
	fmt.Println("║                 CARI DATA SAMPAH                ║")
	fmt.Println("╠═════════════════════════════════════════════════╣")
	fmt.Println("║ Silakan untuk cari berdasarkan :                ║")
	fmt.Println("║ 1. Jenis (Sequential Search)                    ║")
	fmt.Println("║ 2. Jumlah (Binary Search)                       ║")
	fmt.Println("╚═════════════════════════════════════════════════╝")
	fmt.Print(" PILIH OPSI > ")
}

func MenuUrutDataSampah() {
	fmt.Println("╔═════════════════════════════════════════════════╗")
	fmt.Println("║                 URUT DATA SAMPAH                ║")
	fmt.Println("╠═════════════════════════════════════════════════╣")
	fmt.Println("║ Silakan untuk mengurutkan berdasarkan :         ║")
	fmt.Println("║ 1. Jenis (Selection Sort)                       ║")
	fmt.Println("║ 2. Jumlah (Insertion Sort)                      ║")
	fmt.Println("╚═════════════════════════════════════════════════╝")
	fmt.Print(" PILIH OPSI > ")
}

func MenuMengurutkanDataBerdasarkan() {
	fmt.Println("╔═════════════════════════════════════════════════╗")
	fmt.Println("║                PILIHAN URUT DATA                ║")
	fmt.Println("╠═════════════════════════════════════════════════╣")
	fmt.Println("║ Silakan untuk memilih urutan :                  ║")
	fmt.Println("║ 1. Ascending                                    ║")
	fmt.Println("║ 2. Descending                                   ║")
	fmt.Println("╚═════════════════════════════════════════════════╝")
	fmt.Print(" PILIH OPSI > ")
}

func TampilanDataSampahYangTerkumpul() {
	MenuTampilanDataSampahYangTerkumpul()
	for i := 0; i < nSampah; i++ {
		fmt.Printf("║ %-2d │ %-12s │ %-11.2f │ %-12s ║\n", i+1, dataSampahTerkumpul[i].Jenis.Nama, dataSampahTerkumpul[i].Jumlah, dataSampahTerkumpul[i].Waktu)
	}
	fmt.Println("╚═════════════════════════════════════════════════╝")
	tungguEnter("Tekan Enter untuk kembali...")
}

func TampilanDataJenisSampah() {
	MenuTampilanDataJenisSampah()
	for i := 0; i < nJenis; i++ {
		fmt.Printf("║ %-2d │ %-40s ║\n", i+1, daftarJenisSampah[i].Nama)
	}
	fmt.Println("╚═════════════════════════════════════════════════╝")
	tungguEnter("Tekan Enter untuk kembali...")
}

func TampilanDataDaurUlang() {
	MenuTampilanDataDaurUlang()
	for i := 0; i < nDaur; i++ {
		fmt.Printf("║ %-2d │ %-8s │ %-11.2f │ %-8s │ %-8s ║\n", i+1, dataDaurUlang[i].Jenis.Nama, dataDaurUlang[i].Jumlah, dataDaurUlang[i].Metode, dataDaurUlang[i].Waktu)
	}
	fmt.Println("╚═════════════════════════════════════════════════╝")
	tungguEnter("Tekan Enter untuk kembali...")
}

func isStringEqual(s1, s2 string) bool {
	if len(s1) != len(s2) {
		return false
	}
	for i := 0; i < len(s1); i++ {
		c1 := s1[i]
		c2 := s2[i]
		if c1 >= 'A' && c1 <= 'Z' {
			c1 = c1 + 32
		}
		if c2 >= 'A' && c2 <= 'Z' {
			c2 = c2 + 32
		}
		if c1 != c2 {
			return false
		}
	}
	return true
}

func TambahDataSampahYangTerkumpul() {
	MenuTambahDataSampahYangTerkumpul()
	if nSampah >= MAX_SAMPAH {
		fmt.Println("Kapasitas data sampah penuh!")
		tungguEnter("Tekan Enter untuk kembali...")
		return
	}
	var namaJenis, waktu string
	var jumlah float64
	fmt.Print("Masukkan nama jenis sampah: ")
	fmt.Scanln(&namaJenis)
	fmt.Print("Masukkan jumlah (kg): ")
	fmt.Scanln(&jumlah)
	fmt.Print("Masukkan waktu (YYYY-MM-DD): ")
	fmt.Scanln(&waktu)

	idx := -1
	for i := 0; i < nJenis; i++ {
		if isStringEqual(daftarJenisSampah[i].Nama, namaJenis) {
			idx = i
		}
	}
	if idx == -1 {
		fmt.Println("Jenis sampah tidak ditemukan!")
	} else {
		dataSampahTerkumpul[nSampah] = DataTerkumpul{Jenis: daftarJenisSampah[idx], Jumlah: jumlah, Waktu: waktu}
		nSampah++
		fmt.Println("Data berhasil ditambahkan!")
	}
	tungguEnter("Tekan Enter untuk kembali...")
}

func TambahDataJenisSampah() {
	MenuTambahDataJenisSampah()
	if nJenis >= MAX_JENIS {
		fmt.Println("Kapasitas jenis sampah penuh!")
		tungguEnter("Tekan Enter untuk kembali...")
		return
	}
	var nama string
	fmt.Print("Masukkan nama jenis sampah: ")
	fmt.Scanln(&nama)
	daftarJenisSampah[nJenis] = Jenis{Nama: nama}
	nJenis++
	fmt.Println("Jenis sampah berhasil ditambahkan!")
	tungguEnter("Tekan Enter untuk kembali...")
}

func TambahDataDaurUlang() {
	MenuTambahDataDaurUlang()
	if nDaur >= MAX_DAUR {
		fmt.Println("Kapasitas data daur ulang penuh!")
		tungguEnter("Tekan Enter untuk kembali...")
		return
	}
	var namaJenis, metode, waktu string
	var jumlah float64
	fmt.Print("Masukkan nama jenis sampah: ")
	fmt.Scanln(&namaJenis)
	fmt.Print("Masukkan jumlah (kg): ")
	fmt.Scanln(&jumlah)
	fmt.Print("Masukkan metode daur ulang: ")
	fmt.Scanln(&metode)
	fmt.Print("Masukkan waktu (YYYY-MM-DD): ")
	fmt.Scanln(&waktu)

	idx := -1
	for i := 0; i < nJenis; i++ {
		if isStringEqual(daftarJenisSampah[i].Nama, namaJenis) {
			idx = i
		}
	}
	if idx == -1 {
		fmt.Println("Jenis sampah tidak ditemukan!")
	} else {
		dataDaurUlang[nDaur] = DataDaurUlang{Jenis: daftarJenisSampah[idx], Jumlah: jumlah, Metode: metode, Waktu: waktu}
		nDaur++
		fmt.Println("Data daur ulang berhasil ditambahkan!")
	}
	tungguEnter("Tekan Enter untuk kembali...")
}

func HapusDataSampahYangTerkumpul() {
	MenuHapusDataSampahYangTerkumpul()
	TampilanDataSampahYangTerkumpul()
	var idx int
	fmt.Print("Masukkan nomor data yang akan dihapus: ")
	fmt.Scanln(&idx)
	idx--
	if idx >= 0 && idx < nSampah {
		for i := idx; i < nSampah-1; i++ {
			dataSampahTerkumpul[i] = dataSampahTerkumpul[i+1]
		}
		nSampah--
		fmt.Println("Data berhasil dihapus!")
	} else {
		fmt.Println("Nomor data tidak valid!")
	}
	tungguEnter("Tekan Enter untuk kembali...")
}

func HapusDataJenisSampah() {
	MenuHapusDataJenisSampah()
	TampilanDataJenisSampah()
	var idx int
	fmt.Print("Masukkan nomor jenis sampah yang akan dihapus: ")
	fmt.Scanln(&idx)
	idx--
	if idx >= 0 && idx < nJenis {
		used := false
		for i := 0; i < nSampah; i++ {
			if isStringEqual(dataSampahTerkumpul[i].Jenis.Nama, daftarJenisSampah[idx].Nama) {
				used = true
			}
		}
		for i := 0; i < nDaur; i++ {
			if isStringEqual(dataDaurUlang[i].Jenis.Nama, daftarJenisSampah[idx].Nama) {
				used = true
			}
		}
		if used {
			fmt.Println("Jenis sampah tidak dapat dihapus karena masih digunakan!")
		} else {
			for i := idx; i < nJenis-1; i++ {
				daftarJenisSampah[i] = daftarJenisSampah[i+1]
			}
			nJenis--
			fmt.Println("Jenis sampah berhasil dihapus!")
		}
	} else {
		fmt.Println("Nomor jenis sampah tidak valid!")
	}
	tungguEnter("Tekan Enter untuk kembali...")
}

func HapusDataDaurUlang() {
	MenuHapusDataDaurUlang()
	TampilanDataDaurUlang()
	var idx int
	fmt.Print("Masukkan nomor data daur ulang yang akan dihapus: ")
	fmt.Scanln(&idx)
	idx--
	if idx >= 0 && idx < nDaur {
		for i := idx; i < nDaur-1; i++ {
			dataDaurUlang[i] = dataDaurUlang[i+1]
		}
		nDaur--
		fmt.Println("Data daur ulang berhasil dihapus!")
	} else {
		fmt.Println("Nomor data tidak valid!")
	}
	tungguEnter("Tekan Enter untuk kembali...")
}

func UbahDataSampahYangTerkumpul() {
	MenuUbahDataSampahYangTerkumpul()
	TampilanDataSampahYangTerkumpul()
	var idx int
	fmt.Print("Masukkan nomor data yang akan diubah: ")
	fmt.Scanln(&idx)
	idx--
	if idx >= 0 && idx < nSampah {
		var namaJenis, waktu string
		var jumlah float64
		fmt.Print("Masukkan nama jenis sampah baru: ")
		fmt.Scanln(&namaJenis)
		fmt.Print("Masukkan jumlah baru (kg): ")
		fmt.Scanln(&jumlah)
		fmt.Print("Masukkan waktu baru (YYYY-MM-DD): ")
		fmt.Scanln(&waktu)

		idxJenis := -1
		for i := 0; i < nJenis; i++ {
			if isStringEqual(daftarJenisSampah[i].Nama, namaJenis) {
				idxJenis = i
			}
		}
		if idxJenis == -1 {
			fmt.Println("Jenis sampah tidak ditemukan!")
		} else {
			dataSampahTerkumpul[idx] = DataTerkumpul{Jenis: daftarJenisSampah[idxJenis], Jumlah: jumlah, Waktu: waktu}
			fmt.Println("Data berhasil diubah!")
		}
	} else {
		fmt.Println("Nomor data tidak valid!")
	}
	tungguEnter("Tekan Enter untuk kembali...")
}

func UbahDataJenisSampah() {
	MenuUbahDataJenisSampah()
	TampilanDataJenisSampah()
	var idx int
	fmt.Print("Masukkan nomor jenis sampah yang akan diubah: ")
	fmt.Scanln(&idx)
	idx--
	if idx >= 0 && idx < nJenis {
		var nama string
		fmt.Print("Masukkan nama jenis sampah baru: ")
		fmt.Scanln(&nama)
		daftarJenisSampah[idx].Nama = nama
		fmt.Println("Jenis sampah berhasil diubah!")
	} else {
		fmt.Println("Nomor jenis sampah tidak valid!")
	}
	tungguEnter("Tekan Enter untuk kembali...")
}

func UbahDataDaurUlang() {
	MenuUbahDataDaurUlang()
	TampilanDataDaurUlang()
	var idx int
	fmt.Print("Masukkan nomor data daur ulang yang akan diubah: ")
	fmt.Scanln(&idx)
	idx--
	if idx >= 0 && idx < nDaur {
		var namaJenis, metode, waktu string
		var jumlah float64
		fmt.Print("Masukkan nama jenis sampah baru: ")
		fmt.Scanln(&namaJenis)
		fmt.Print("Masukkan jumlah baru (kg): ")
		fmt.Scanln(&jumlah)
		fmt.Print("Masukkan metode daur ulang baru: ")
		fmt.Scanln(&metode)
		fmt.Print("Masukkan waktu baru (YYYY-MM-DD): ")
		fmt.Scanln(&waktu)

		idxJenis := -1
		for i := 0; i < nJenis; i++ {
			if isStringEqual(daftarJenisSampah[i].Nama, namaJenis) {
				idxJenis = i
			}
		}
		if idxJenis == -1 {
			fmt.Println("Jenis sampah tidak ditemukan!")
		} else {
			dataDaurUlang[idx] = DataDaurUlang{Jenis: daftarJenisSampah[idxJenis], Jumlah: jumlah, Metode: metode, Waktu: waktu}
			fmt.Println("Data daur ulang berhasil diubah!")
		}
	} else {
		fmt.Println("Nomor data tidak valid!")
	}
	tungguEnter("Tekan Enter untuk kembali...")
}

func SequentialSearchJenis(nama string) {
	found := false
	fmt.Println("Hasil pencarian berdasarkan jenis:", nama)
	MenuTampilanDataSampahYangTerkumpul()
	for i := 0; i < nSampah; i++ {
		if isStringEqual(dataSampahTerkumpul[i].Jenis.Nama, nama) {
			fmt.Printf("║ %-2d │ %-12s │ %-11.2f │ %-12s ║\n", i+1, dataSampahTerkumpul[i].Jenis.Nama, dataSampahTerkumpul[i].Jumlah, dataSampahTerkumpul[i].Waktu)
			found = true
		}
	}
	if !found {
		fmt.Println("Data tidak ditemukan!")
	}
	fmt.Println("╚═════════════════════════════════════════════════╝")
	tungguEnter("Tekan Enter untuk kembali...")
}

func BinarySearchJumlah(jumlah float64) {
	var temp [MAX_SAMPAH]DataTerkumpul
	for i := 0; i < nSampah; i++ {
		temp[i] = dataSampahTerkumpul[i]
	}
	for i := 1; i < nSampah; i++ {
		key := temp[i]
		j := i - 1
		for j >= 0 && temp[j].Jumlah > key.Jumlah {
			temp[j+1] = temp[j]
			j--
		}
		temp[j+1] = key
	}

	left := 0
	right := nSampah - 1
	found := false
	fmt.Println("Hasil pencarian berdasarkan jumlah:", jumlah)
	MenuTampilanDataSampahYangTerkumpul()
	for left <= right {
		mid := (left + right) / 2
		if temp[mid].Jumlah == jumlah {
			fmt.Printf("║ %-2d │ %-12s │ %-11.2f │ %-12s ║\n", mid+1, temp[mid].Jenis.Nama, temp[mid].Jumlah, temp[mid].Waktu)
			found = true
			for i := mid - 1; i >= 0 && temp[i].Jumlah == jumlah; i-- {
				fmt.Printf("║ %-2d │ %-12s │ %-11.2f │ %-12s ║\n", i+1, temp[i].Jenis.Nama, temp[i].Jumlah, temp[i].Waktu)
			}
			for i := mid + 1; i < nSampah && temp[i].Jumlah == jumlah; i++ {
				fmt.Printf("║ %-2d │ %-12s │ %-11.2f │ %-12s ║\n", i+1, temp[i].Jenis.Nama, temp[i].Jumlah, temp[i].Waktu)
			}
			left = right + 1
		} else if temp[mid].Jumlah > jumlah {
			right = mid - 1
		} else {
			left = mid + 1
		}
	}
	if !found {
		fmt.Println("Data tidak ditemukan!")
	}
	fmt.Println("╚═════════════════════════════════════════════════╝")
	tungguEnter("Tekan Enter untuk kembali...")
}

func SelectionSortJenis(ascending bool) {
	var temp [MAX_SAMPAH]DataTerkumpul
	for i := 0; i < nSampah; i++ {
		temp[i] = dataSampahTerkumpul[i]
	}
	for i := 0; i < nSampah-1; i++ {
		idx := i
		for j := i + 1; j < nSampah; j++ {
			if ascending {
				if temp[j].Jenis.Nama < temp[idx].Jenis.Nama {
					idx = j
				}
			} else {
				if temp[j].Jenis.Nama > temp[idx].Jenis.Nama {
					idx = j
				}
			}
		}
		if idx != i {
			temp[i], temp[idx] = temp[idx], temp[i]
		}
	}
	MenuTampilanDataSampahYangTerkumpul()
	for i := 0; i < nSampah; i++ {
		fmt.Printf("║ %-2d │ %-12s │ %-11.2f │ %-12s ║\n", i+1, temp[i].Jenis.Nama, temp[i].Jumlah, temp[i].Waktu)
	}
	fmt.Println("╚═════════════════════════════════════════════════╝")
	tungguEnter("Tekan Enter untuk kembali...")
}

func InsertionSortJumlah(ascending bool) {
	var temp [MAX_SAMPAH]DataTerkumpul
	for i := 0; i < nSampah; i++ {
		temp[i] = dataSampahTerkumpul[i]
	}
	for i := 1; i < nSampah; i++ {
		key := temp[i]
		j := i - 1
		if ascending {
			for j >= 0 && temp[j].Jumlah > key.Jumlah {
				temp[j+1] = temp[j]
				j--
			}
		} else {
			for j >= 0 && temp[j].Jumlah < key.Jumlah {
				temp[j+1] = temp[j]
				j--
			}
		}
		temp[j+1] = key
	}
	MenuTampilanDataSampahYangTerkumpul()
	for i := 0; i < nSampah; i++ {
		fmt.Printf("║ %-2d │ %-12s │ %-11.2f │ %-12s ║\n", i+1, temp[i].Jenis.Nama, temp[i].Jumlah, temp[i].Waktu)
	}
	fmt.Println("╚═════════════════════════════════════════════════╝")
	tungguEnter("Tekan Enter untuk kembali...")
}

func TampilanStatistik() {
	var totalSampah, totalDaur float64
	for i := 0; i < nSampah; i++ {
		totalSampah += dataSampahTerkumpul[i].Jumlah
	}
	for i := 0; i < nDaur; i++ {
		totalDaur += dataDaurUlang[i].Jumlah
	}
	fmt.Println("╔═════════════════════════════════════════════════╗")
	fmt.Println("║               TAMPILAN STATISTIK                ║")
	fmt.Println("╠═════════════════════════════════════════════════╣")
	fmt.Println("║ Total Sampah Terkumpul: ", totalSampah, " kg")
	fmt.Println("║ Total Sampah Didaur Ulang: ", totalDaur, " kg")
	if totalSampah > 0 {
		fmt.Println("║ Persentase Daur Ulang: ", (totalDaur/totalSampah)*100, "%")
	} else {
		fmt.Println("║ Persentase Daur Ulang: 0%")
	}
	fmt.Println("╚═════════════════════════════════════════════════╝")
	tungguEnter("Tekan Enter untuk kembali...")
}

func CariDataSampah() {
	MenuCariDataSampah()
	var pilihan int
	fmt.Scanln(&pilihan)
	if pilihan == 1 {
		var nama string
		fmt.Print("Masukkan nama jenis sampah: ")
		fmt.Scanln(&nama)
		SequentialSearchJenis(nama)
	} else if pilihan == 2 {
		var jumlah float64
		fmt.Print("Masukkan jumlah (kg): ")
		fmt.Scanln(&jumlah)
		BinarySearchJumlah(jumlah)
	} else {
		fmt.Println("Opsi tidak valid!")
		tungguEnter("Tekan Enter untuk kembali...")
	}
}

func UrutDataSampah() {
	MenuUrutDataSampah()
	var pilihan int
	fmt.Scanln(&pilihan)
	if pilihan == 1 || pilihan == 2 {
		MenuMengurutkanDataBerdasarkan()
		var urutan int
		fmt.Scanln(&urutan)
		ascending := urutan == 1
		if pilihan == 1 {
			SelectionSortJenis(ascending)
		} else if pilihan == 2 {
			InsertionSortJumlah(ascending)
		}
	} else {
		fmt.Println("Opsi tidak valid!")
		tungguEnter("Tekan Enter untuk kembali...")
	}
}

func main() {
	initDummyData()
	var menu, submenu int
	for {
		MenuUtama()
		fmt.Scanln(&menu)
		switch menu {
		case 1:
			MenuPerubahanData()
			fmt.Scanln(&submenu)
			switch submenu {
			case 0:
			case 1:
				TampilanDataSampahYangTerkumpul()
			case 2:
				TambahDataSampahYangTerkumpul()
			case 3:
				HapusDataSampahYangTerkumpul()
			case 4:
				UbahDataSampahYangTerkumpul()
			default:
				fmt.Println("Opsi tidak tersedia, silakan pilih yang lain.")
				tungguEnter("Tekan Enter untuk kembali...")
			}
		case 2:
			MenuPerubahanData()
			fmt.Scanln(&submenu)
			switch submenu {
			case 0:
			case 1:
				TampilanDataJenisSampah()
			case 2:
				TambahDataJenisSampah()
			case 3:
				HapusDataJenisSampah()
			case 4:
				UbahDataJenisSampah()
			default:
				fmt.Println("Opsi tidak tersedia, silakan pilih yang lain.")
				tungguEnter("Tekan Enter untuk kembali...")
			}
		case 3:
			MenuPerubahanData()
			fmt.Scanln(&submenu)
			switch submenu {
			case 0:
			case 1:
				TampilanDataDaurUlang()
			case 2:
				TambahDataDaurUlang()
			case 3:
				HapusDataDaurUlang()
			case 4:
				UbahDataDaurUlang()
			default:
				fmt.Println("Opsi tidak tersedia, silakan pilih yang lain.")
				tungguEnter("Tekan Enter untuk kembali...")
			}
		case 4:
			CariDataSampah()
		case 5:
			UrutDataSampah()
		case 6:
			TampilanStatistik()
		case 7:
			os.Exit(0)
		default:
			fmt.Println("Opsi tidak tersedia, silakan pilih yang lain.")
			tungguEnter("Tekan Enter untuk kembali...")
		}
	}
}

```
